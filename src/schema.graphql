# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AccountModel {
  amount: Int!
  id: ID!
  name: String!
}

input CategoryInput {
  name: String!
}

type CategoryModel {
  id: Int!
  name: String!
}

input CreateAccountInput {
  amount: Int!
  name: String!
}

input CreateUserInput {
  email: String!
  name: String!
  nickname: String!
  password: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Gender {
  FEMALE
  MALE
  NA
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResponse {
  accessToken: String!
  success: Boolean!
  user: UserModel!
}

type Mutation {
  createAccount(createAccountInput: CreateAccountInput!): AccountModel
  createCategory(CategoryInput: CategoryInput!): CategoryModel!
  createPaymentMethod(paymentMethodInput: PaymentMethodInput!): PaymentMethodModel!
  login(loginInput: LoginInput!): LoginResponse!
  makeTransaction(transactionInput: TransactionInput!): TransactionModel!
  register(registerInput: CreateUserInput!): RegisterResponse!
}

input PaymentMethodInput {
  name: String!
}

type PaymentMethodModel {
  id: Int!
  name: String!
}

type Query {
  categories: [CategoryModel!]!
  paymentMethods: [PaymentMethodModel!]!
  transactions: [TransactionModel!]!
  users: [UserModel!]!
}

type RegisterResponse {
  accessToken: String
  message: String!
  success: Boolean!
}

input TransactionInput {
  accountId: ID!
  amount: Float = 0
  categoryId: ID
  type: TransactionType!
  userId: ID!
}

type TransactionModel {
  accountId: ID!
  amount: Int!
  categoryId: ID
  id: ID!
  type: TransactionType!
  userId: ID
}

enum TransactionType {
  EXPEND
  INCOME
  TRANSFER
}

type UserModel {
  accounts: [AccountModel!]
  createdAt: DateTime!
  email: String!
  gender: Gender
  id: ID!
  name: String!
  nickname: String
  transactions: [TransactionModel!]
  verifiedAt: DateTime
}
